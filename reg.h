#ifndef REG_H
#define REG_H

#include <stdint.h>

#define BIT(shift) (1 << (shift))
#define REG32(addr) (*(uint32_t volatile *)(void *)(addr))


////////////////////
// Reset and Clock Control (RCC)
//

// RCC offsets
#define REG_RCC_CR_OFFSET       0x00 // Clock control register
#define REG_RCC_CFGR_OFFSET     0x04 // Clock configuration register
#define REG_RCC_CIR_OFFSET      0x08 // Clock interrupt register
#define REG_RCC_APB2RSTR_OFFSET 0x0c // APB peripheral reset register 2
#define REG_RCC_APB1RSTR_OFFSET 0x10 // APB peripheral reset register 1
#define REG_RCC_AHBENR_OFFSET   0x14 // AHB peripheral clock enable register
#define REG_RCC_APB2ENR_OFFSET  0x18 // APB peripheral clock enable register 2
#define REG_RCC_APB1ENR_OFFSET  0x1c // APB peripheral clock enable register 1
#define REG_RCC_BDCR_OFFSET     0x20 // RTC domain control register
#define REG_RCC_CSR_OFFSET      0x24 // Control/status register
#define REG_RCC_AHBRSTR_OFFSET  0x28 // AHB peripheral reset register
#define REG_RCC_CFGR2_OFFSET    0x2c // Clock configuration register 2
#define REG_RCC_CFGR3_OFFSET    0x30 // Clock configuration register 3
#define REG_RCC_CR2_OFFSET      0x34 // Clock control register 2

// RCC
#define REG_RCC_START 0x40021000
#define REG_RCC_CR       REG32(REG_RCC_START + REG_RCC_CR_OFFSET)
#define REG_RCC_CFGR     REG32(REG_RCC_START + REG_RCC_CFGR_OFFSET)
#define REG_RCC_CIR      REG32(REG_RCC_START + REG_RCC_CIR_OFFSET)
#define REG_RCC_APB2RSTR REG32(REG_RCC_START + REG_RCC_APB2RSTR_OFFSET)
#define REG_RCC_APB1RSTR REG32(REG_RCC_START + REG_RCC_APB1RSTR_OFFSET)
#define REG_RCC_AHBENR   REG32(REG_RCC_START + REG_RCC_AHBENR_OFFSET)
#define REG_RCC_APB2ENR  REG32(REG_RCC_START + REG_RCC_APB2ENR_OFFSET)
#define REG_RCC_APB1ENR  REG32(REG_RCC_START + REG_RCC_APB1ENR_OFFSET)
#define REG_RCC_BDCR     REG32(REG_RCC_START + REG_RCC_BDCR_OFFSET)
#define REG_RCC_CSR      REG32(REG_RCC_START + REG_RCC_CSR_OFFSET)
#define REG_RCC_AHBRSTR  REG32(REG_RCC_START + REG_RCC_AHBRSTR_OFFSET)
#define REG_RCC_CFGR2    REG32(REG_RCC_START + REG_RCC_CFGR2_OFFSET)
#define REG_RCC_CFGR3    REG32(REG_RCC_START + REG_RCC_CFGR3_OFFSET)
#define REG_RCC_CR2      REG32(REG_RCC_START + REG_RCC_CR2_OFFSET)

////////////////////
// GPIOx
//

// GPIOx offsets
#define REG_GPIO_MODER_OFFSET   0x00 // GPIO port mode register
#define REG_GPIO_OTYPER_OFFSET  0x04 // GPIO port output type register
#define REG_GPIO_OSPEEDR_OFFSET 0x08 // GPIO port output speed register
#define REG_GPIO_PUPDR_OFFSET   0x0c // GPIO port pull-up/pull-down register
#define REG_GPIO_IDR_OFFSET     0x10 // GPIO port input data register
#define REG_GPIO_ODR_OFFSET     0x14 // GPIO port output data register
#define REG_GPIO_BSRR_OFFSET    0x18 // GPIO port bit set/reset register
#define REG_GPIO_LCKR_OFFSET    0x1c // GPIO port configuration lock register
#define REG_GPIO_AFRLR_OFFSET   0x20 // GPIO alternate function low register
#define REG_GPIO_AFRHR_OFFSET   0x24 // GPIO alternate function high register
#define REG_GPIO_BRR_OFFSET     0x28 // GPIO port bit reset register

// GPIOA
#define REG_GPIOA_START 0x48000000
#define REG_GPIOA_MODER   REG32(REG_GPIOA_START + REG_GPIO_MODER_OFFSET)
#define REG_GPIOA_OTYPER  REG32(REG_GPIOA_START + REG_GPIO_OTYPER_OFFSET
#define REG_GPIOA_OSPEEDR REG32(REG_GPIOA_START + REG_GPIO_OSPEEDR_OFFSET)
#define REG_GPIOA_PUPDR   REG32(REG_GPIOA_START + REG_GPIO_PUPDR_OFFSET)
#define REG_GPIOA_IDR     REG32(REG_GPIOA_START + REG_GPIO_IDR_OFFSET)
#define REG_GPIOA_ODR     REG32(REG_GPIOA_START + REG_GPIO_ODR_OFFSET)
#define REG_GPIOA_BSRR    REG32(REG_GPIOA_START + REG_GPIO_BSRR_OFFSET)
#define REG_GPIOA_LCKR    REG32(REG_GPIOA_START + REG_GPIO_LCKR_OFFSET)
#define REG_GPIOA_AFRLR   REG32(REG_GPIOA_START + REG_GPIO_AFRLR_OFFSET)
#define REG_GPIOA_AFRHR   REG32(REG_GPIOA_START + REG_GPIO_AFRHR_OFFSET)
#define REG_GPIOA_BRR     REG32(REG_GPIOA_START + REG_GPIO_BRR_OFFSET)

// GPIOB
#define REG_GPIOB_START 0x48000400
#define REG_GPIOB_MODER   REG32(REG_GPIOB_START + REG_GPIO_MODER_OFFSET)
#define REG_GPIOB_OTYPER  REG32(REG_GPIOB_START + REG_GPIO_OTYPER_OFFSET
#define REG_GPIOB_OSPEEDR REG32(REG_GPIOB_START + REG_GPIO_OSPEEDR_OFFSET)
#define REG_GPIOB_PUPDR   REG32(REG_GPIOB_START + REG_GPIO_PUPDR_OFFSET)
#define REG_GPIOB_IDR     REG32(REG_GPIOB_START + REG_GPIO_IDR_OFFSET)
#define REG_GPIOB_ODR     REG32(REG_GPIOB_START + REG_GPIO_ODR_OFFSET)
#define REG_GPIOB_BSRR    REG32(REG_GPIOB_START + REG_GPIO_BSRR_OFFSET)
#define REG_GPIOB_LCKR    REG32(REG_GPIOB_START + REG_GPIO_LCKR_OFFSET)
#define REG_GPIOB_AFRLR   REG32(REG_GPIOB_START + REG_GPIO_AFRLR_OFFSET)
#define REG_GPIOB_AFRHR   REG32(REG_GPIOB_START + REG_GPIO_AFRHR_OFFSET)
#define REG_GPIOB_BRR     REG32(REG_GPIOB_START + REG_GPIO_BRR_OFFSET)

// GPIOC
#define REG_GPIOC_START 0x48000800
#define REG_GPIOC_MODER   REG32(REG_GPIOC_START + REG_GPIO_MODER_OFFSET)
#define REG_GPIOC_OTYPER  REG32(REG_GPIOC_START + REG_GPIO_OTYPER_OFFSET
#define REG_GPIOC_OSPEEDR REG32(REG_GPIOC_START + REG_GPIO_OSPEEDR_OFFSET)
#define REG_GPIOC_PUPDR   REG32(REG_GPIOC_START + REG_GPIO_PUPDR_OFFSET)
#define REG_GPIOC_IDR     REG32(REG_GPIOC_START + REG_GPIO_IDR_OFFSET)
#define REG_GPIOC_ODR     REG32(REG_GPIOC_START + REG_GPIO_ODR_OFFSET)
#define REG_GPIOC_BSRR    REG32(REG_GPIOC_START + REG_GPIO_BSRR_OFFSET)
#define REG_GPIOC_LCKR    REG32(REG_GPIOC_START + REG_GPIO_LCKR_OFFSET)
#define REG_GPIOC_AFRLR   REG32(REG_GPIOC_START + REG_GPIO_AFRLR_OFFSET)
#define REG_GPIOC_AFRHR   REG32(REG_GPIOC_START + REG_GPIO_AFRHR_OFFSET)
#define REG_GPIOC_BRR     REG32(REG_GPIOC_START + REG_GPIO_BRR_OFFSET)

// GPIOD
#define REG_GPIOD_START 0x48000C00
#define REG_GPIOD_MODER   REG32(REG_GPIOD_START + REG_GPIO_MODER_OFFSET)
#define REG_GPIOD_OTYPER  REG32(REG_GPIOD_START + REG_GPIO_OTYPER_OFFSET
#define REG_GPIOD_OSPEEDR REG32(REG_GPIOD_START + REG_GPIO_OSPEEDR_OFFSET)
#define REG_GPIOD_PUPDR   REG32(REG_GPIOD_START + REG_GPIO_PUPDR_OFFSET)
#define REG_GPIOD_IDR     REG32(REG_GPIOD_START + REG_GPIO_IDR_OFFSET)
#define REG_GPIOD_ODR     REG32(REG_GPIOD_START + REG_GPIO_ODR_OFFSET)
#define REG_GPIOD_BSRR    REG32(REG_GPIOD_START + REG_GPIO_BSRR_OFFSET)
#define REG_GPIOD_LCKR    REG32(REG_GPIOD_START + REG_GPIO_LCKR_OFFSET)
#define REG_GPIOD_AFRLR   REG32(REG_GPIOD_START + REG_GPIO_AFRLR_OFFSET)
#define REG_GPIOD_AFRHR   REG32(REG_GPIOD_START + REG_GPIO_AFRHR_OFFSET)
#define REG_GPIOD_BRR     REG32(REG_GPIOD_START + REG_GPIO_BRR_OFFSET)

// GPIOE
#define REG_GPIOE_START 0x48001000
#define REG_GPIOE_MODER   REG32(REG_GPIOE_START + REG_GPIO_MODER_OFFSET)
#define REG_GPIOE_OTYPER  REG32(REG_GPIOE_START + REG_GPIO_OTYPER_OFFSET
#define REG_GPIOE_OSPEEDR REG32(REG_GPIOE_START + REG_GPIO_OSPEEDR_OFFSET)
#define REG_GPIOE_PUPDR   REG32(REG_GPIOE_START + REG_GPIO_PUPDR_OFFSET)
#define REG_GPIOE_IDR     REG32(REG_GPIOE_START + REG_GPIO_IDR_OFFSET)
#define REG_GPIOE_ODR     REG32(REG_GPIOE_START + REG_GPIO_ODR_OFFSET)
#define REG_GPIOE_BSRR    REG32(REG_GPIOE_START + REG_GPIO_BSRR_OFFSET)
#define REG_GPIOE_LCKR    REG32(REG_GPIOE_START + REG_GPIO_LCKR_OFFSET)
#define REG_GPIOE_AFRLR   REG32(REG_GPIOE_START + REG_GPIO_AFRLR_OFFSET)
#define REG_GPIOE_AFRHR   REG32(REG_GPIOE_START + REG_GPIO_AFRHR_OFFSET)
#define REG_GPIOE_BRR     REG32(REG_GPIOE_START + REG_GPIO_BRR_OFFSET)

// GPIOF
#define REG_GPIOF_START 0x48001400
#define REG_GPIOF_MODER   REG32(REG_GPIOF_START + REG_GPIO_MODER_OFFSET)
#define REG_GPIOF_OTYPER  REG32(REG_GPIOF_START + REG_GPIO_OTYPER_OFFSET
#define REG_GPIOF_OSPEEDR REG32(REG_GPIOF_START + REG_GPIO_OSPEEDR_OFFSET)
#define REG_GPIOF_PUPDR   REG32(REG_GPIOF_START + REG_GPIO_PUPDR_OFFSET)
#define REG_GPIOF_IDR     REG32(REG_GPIOF_START + REG_GPIO_IDR_OFFSET)
#define REG_GPIOF_ODR     REG32(REG_GPIOF_START + REG_GPIO_ODR_OFFSET)
#define REG_GPIOF_BSRR    REG32(REG_GPIOF_START + REG_GPIO_BSRR_OFFSET)
#define REG_GPIOF_LCKR    REG32(REG_GPIOF_START + REG_GPIO_LCKR_OFFSET)
#define REG_GPIOF_AFRLR   REG32(REG_GPIOF_START + REG_GPIO_AFRLR_OFFSET)
#define REG_GPIOF_AFRHR   REG32(REG_GPIOF_START + REG_GPIO_AFRHR_OFFSET)
#define REG_GPIOF_BRR     REG32(REG_GPIOF_START + REG_GPIO_BRR_OFFSET)

#endif
